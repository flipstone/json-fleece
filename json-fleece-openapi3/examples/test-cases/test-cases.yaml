openapi: 3.0.1
info:
  title: Fleece TestCases
  version: 1.0.0
components:
  schemas:
    FieldTestCases:
      type: object
      description: A schema that contains test cases for each kind of field
      properties:
        requiredField:
          type: string
        optionalField:
          type: string
        optionalNullableField:
          type: string
          nullable: true
        requiredNullableField:
          type: string
          nullable: true
        arrayField:
          type: array
          items:
            type: string
        nullableArrayField:
          type: array
          nullable: true
          items:
            type: string
        optionalArrayField:
          type: array
          items:
            type: string
        optionalNullableArrayField:
          type: array
          nullable: true
          items:
            type: string
      required:
        - requiredField
        - requiredNullableField
        - arrayField
        - nullableArrayField

    TopLevelArray:
      type: array
      description: A schema that defines a top level array
      items:
        type: string

    TopLevelArrayNullable:
      type: array
      description: A schema that defines a top level array with nullable items
      items:
        type: string
        nullable: true

    NameConflicts:
      type: object
      properties:
        text:
          type: string
        scientific:
          type: number
        int32:
          type: integer
          format: int32
        int64:
          type: integer
          format: int64
        nameConflicts:
          type: string
        case:
          type: string
        class:
          type: string
        data:
          type: string
        deriving:
          type: string
        do:
          type: string
        else:
          type: string
        if:
          type: string
        import:
          type: string
        in:
          type: string
        infix:
          type: string
        infixl:
          type: string
        infixr:
          type: string
        instance:
          type: string
        let:
          type: string
        of:
          type: string
        module:
          type: string
        newtype:
          type: string
        then:
          type: string
        type:
          type: string
        where:
          type: string
